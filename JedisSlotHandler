/**
 * Copyright (c) 2020-2027 shun
 * All rights reserved.
 *
 */
package com.bx.redis;

import java.util.Set;

import org.apache.commons.pool2.impl.GenericObjectPoolConfig;

import redis.clients.jedis.HostAndPort;
import redis.clients.jedis.JedisPool;
import redis.clients.jedis.JedisSlotBasedConnectionHandler;
import redis.clients.jedis.exceptions.JedisNoReachableClusterNodeException;

public class JedisSlotHandler extends JedisSlotBasedConnectionHandler {

	public JedisSlotHandler(Set<HostAndPort> nodes, GenericObjectPoolConfig poolConfig,
			int connectionTimeout, int soTimeout, String password) {
		super(nodes, poolConfig, connectionTimeout, soTimeout, password);
	}

	public JedisPool getJedisPoolFromSlot(int slot) {
		JedisPool connectionPool = cache.getSlotPool(slot);
		if (connectionPool != null) {
			// It can't guaranteed to get valid connection because of node
			// assignment
			return connectionPool;
		} else {
			renewSlotCache(); // It's abnormal situation for cluster mode, that we have just nothing for slot,
								// try to rediscover state
			connectionPool = cache.getSlotPool(slot);
			if (connectionPool != null) {
				return connectionPool;
			} else {
				throw new JedisNoReachableClusterNodeException("No reachable node in cluster for slot " + slot);
			}
		}
	}
}
