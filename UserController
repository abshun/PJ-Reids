package com.bx.user;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.bx.redis.JedisSlotHandler;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisCluster;
import redis.clients.jedis.JedisPool;
import redis.clients.jedis.util.JedisClusterCRC16;

@RequestMapping(value = "/redis", produces = MediaType.APPLICATION_JSON_VALUE)
@RestController
public class UserController {

	@Autowired
	private RedisTemplate<String, Object> redisTemplate;

	@Autowired
	private JedisCluster jedisCluster;
	@Autowired
	private JedisSlotHandler jedisSlotHandler;

	// @Autowired
	// private JedisClientCluster jedisClientCluster;

	@RequestMapping(value = "/get", method = { RequestMethod.GET })
	public Object login(HttpServletRequest request, HttpServletResponse response) {
		String key = "test";
		jedisCluster.set(key, "test");
		String f = jedisCluster.get("test");
		System.out.println(f);

		redisTemplate.opsForValue().set(key, "hello world! 你好，世界");
		String str = (String) redisTemplate.opsForValue().get("demo");

		System.out.println(str);
		
		int slot = JedisClusterCRC16.getSlot(key);
		JedisPool jedisPool2 = jedisSlotHandler.getJedisPoolFromSlot(slot);
		Jedis jedis2 = jedisPool2.getResource();
		jedis2.set(key, "shun hi!");
		str = jedis2.get(key);
		System.out.println(str);
		jedis2.close();

		JedisPool jedisPool = jedisSlotHandler.getJedisPoolFromSlot(slot);
		Jedis jedis = jedisPool.getResource();
		jedis.set(key, "shun hidfsfd!");
		str = jedis.get(key);
		System.out.println(str);
		jedis.close();


		return "";
	}

	@RequestMapping(value = "/fffff/{id}", method = { RequestMethod.GET })
	public Object getUserByI2d(HttpServletRequest request, HttpServletResponse response, @RequestBody String body) {

		System.out.println(request.getServerPort() + "  ok2   " + System.currentTimeMillis() / 1000);
		return "ok2";
	}

	@RequestMapping(value = "/sign", method = { RequestMethod.GET })
	public Object sign(HttpServletRequest request, HttpServletResponse response) {

		System.out.println(request.getServerPort() + "  sign" + System.currentTimeMillis() / 1000);
		return "sign";
	}
}
